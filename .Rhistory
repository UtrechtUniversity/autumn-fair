return(list(plots = plots, data = plot.data))
}
test$plots
test <- input.plot(transform.data.for.plot(localE$data))
test$plots
debugSource("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
test$plots
test <- input.plot(transform.data.for.plot(localE$data))
sort_by(plot.data, c("inoculationStatus","group"))
plot.data
sort(plot.data, c("inoculationStatus","group"))
order(plot.data, c("inoculationStatus","group"))
order(plot.data, c("inoculationStatus","group"))
plot.data[plot.data$treatment == i,]%>%mutate(order_by(inoculationStatus))
plot.data$treatment
plot.data[plot.data$treatment == "control",]%>%mutate(order_by(inoculationStatus))
#plot the input from a transmission experiment
#data require the following headings: group, animal_id, inoc,lastneg, firstpos, lastpos, firstrec, lastObs
input.plot <- function(data, color_scheme = c("#999999","#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"), period.labels = c("Negative", 'Neg->Pos', 'Positive', 'Pos-> Neg',"Negative again")){
plot.data <- data[,c(1:4)];#only select indicators
#replace all negative numbers for lastObs
data$lastneg[data$lastneg<0 ]<- data$lastObs[data$lastneg<0 ]
data$firstpos[data$firstpos<0 ]<- data$lastObs[data$firstpos<0 ]
data$lastpos[data$lastpos<0 ]<- data$lastObs[data$lastpos<0 ]
data$firstrec[data$firstrec<0 ]<- data$lastObs[data$firstrec<0 ]
#replace real time with interval
plot.data$neg1 <- data$lastneg;
plot.data$negpos <- data$firstpos - data$lastneg;
plot.data$pos <-data$lastpos - data$firstpos;
plot.data$posneg2 <- data$firstrec - data$lastpos;
plot.data$neg2 <-  data$lastObs-data$firstrec;
#melt down
plot.data <- melt(plot.data,id = c("host_id","inoculationStatus","group","treatment"))
#create plots per treatment
plots <-NULL
for(i in unique(plot.data$treatment)){
plots<- ggplot(data = plot.data[plot.data$treatment == i,])+
geom_bar(aes(y = value, x = as.factor(host_id),
fill = factor(variable,levels = c("neg1","negpos","pos","posneg2","neg2")[c(5,4,3,2,1)])),stat= 'identity')+
coord_flip()+
scale_fill_manual('State',
values = color_scheme,
labels = period.labels[c(5,4,3,2,1)])+ylab("Days post challenge")+
xlab("host ID")+
ggtitle(i)+
scale_y_continuous(breaks = c(-1:max(plot.data$value[!is.infinite(plot.data$value)])) )+
scale_x_discrete(limits = rev)+
if(length(unique(plot.data$group))>1){facet_grid(group + inoculationStatus ~ ., scales = "free_y")}
}
return(list(plots = plots, data = plot.data))
}
debugSource("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
input.plot(transform.data.for.plot(localE$data))
plot.data[plot.data$treatment == i,]
plot.data[plot.data$treatment == i,]%>%mutate(order_by(group)
)
plot.data[plot.data$treatment == i,]%>%arrange(desc(group))
plot.data[plot.data$treatment == i,]%>%arrange(asc(group))
plot.data[plot.data$treatment == i,]%>%arrange(group)
ggplot(data = plot.data[plot.data$treatment == i,]%>%arrange(group))+
geom_bar(aes(y = value, x = as.factor(host_id),
fill = factor(variable,levels = c("neg1","negpos","pos","posneg2","neg2")[c(5,4,3,2,1)])),stat= 'identity')+
coord_flip()+
scale_fill_manual('State',
values = color_scheme,
labels = period.labels[c(5,4,3,2,1)])+ylab("Days post challenge")+
xlab("host ID")+
ggtitle(i)+
scale_y_continuous(breaks = c(-1:max(plot.data$value[!is.infinite(plot.data$value)])) )+
scale_x_discrete(limits = rev)+
if(length(unique(plot.data$group))>1){facet_grid(group + inoculationStatus ~ ., scales = "free_y")
ggplot(data = plot.data[plot.data$treatment == i,]%>%arrange(group))+
geom_bar(aes(y = value, x = as.factor(host_id),
fill = factor(variable,levels = c("neg1","negpos","pos","posneg2","neg2")[c(5,4,3,2,1)])),stat= 'identity')+
coord_flip()+
scale_fill_manual('State',
values = color_scheme,
labels = period.labels[c(5,4,3,2,1)])+ylab("Days post challenge")+
xlab("host ID")+
ggtitle(i)+
scale_y_continuous(breaks = c(-1:max(plot.data$value[!is.infinite(plot.data$value)])) )+
scale_x_discrete(limits = rev)+
if(length(unique(plot.data$group))>1){facet_grid(group + inoculationStatus ~ ., scales = "free_y")}
ggplot(data = plot.data[plot.data$treatment == i,]%>%arrange(group))+
geom_bar(aes(y = value, x = as.factor(host_id),
fill = factor(variable,levels = c("neg1","negpos","pos","posneg2","neg2")[c(5,4,3,2,1)])),stat= 'identity')+
coord_flip()+
scale_fill_manual('State',
values = color_scheme,
labels = period.labels[c(5,4,3,2,1)])+ylab("Days post challenge")+
xlab("host ID")+
ggtitle(i)+
scale_y_continuous(breaks = c(-1:max(plot.data$value[!is.infinite(plot.data$value)])) )+
scale_x_discrete(limits = rev)+
if(length(unique(plot.data$group))>1){facet_grid(group + inoculationStatus ~ ., scales = "free_y")}
plot.data[plot.data$treatment == i,]
plot.data[plot.data$treatment == i,]%>%arrange(group)
data
data[is.infinite(data$lastneg),]
data[is.infinite(data$lastneg),]$lastneg
data[is.infinite(data$lastneg),]$firstpos
data[is.infinite(data$lastneg),]
data[is.infinite(data$firstpos),]
data$lastpos
data[data$lastpos<0, ]
data$lastpos<0
data
data[is.infinite(data$lastneg),]$firstpos
data[is.infinite(data$firstpos),]$lastpos
data[is.infinite(data$lastpos),]$lastObs
is.infinite(data$lastpos)
debugSource("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
input.plot(transform.data.for.plot(localE$data))
source("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
input.plot(transform.data.for.plot(localE$data))
#plot the input from a transmission experiment
#data require the following headings: group, animal_id, inoc,lastneg, firstpos, lastpos, firstrec, lastObs
input.plot <- function(data, color_scheme = c("#999999","#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"), period.labels = c("Negative", 'Neg->Pos', 'Positive', 'Pos-> Neg',"Negative again")){
plot.data <- data[,c(1:4)];#only select indicators
#replace all negative numbers for lastObs
data$lastneg[data$lastneg<0 ]<- data$lastObs[data$lastneg<0 ]
data$firstpos[data$firstpos<0 ]<- data$lastObs[data$firstpos<0 ]
data$lastpos[data$lastpos<0 ]<- data$lastObs[data$lastpos<0 ]
data$firstrec[data$firstrec<0 ]<- data$lastObs[data$firstrec<0 ]
#replace infinity for appropriate values
data[is.infinite(data$lastneg),]$lastneg<-data[is.infinite(data$lastneg),]$firstpos
data[is.infinite(data$firstpos),]$firstpos<-data[is.infinite(data$firstpos),]$lastpos
data[is.infinite(data$lastpos),]$lastpos<-data[is.infinite(data$lastpos),]$lastObs
data[is.infinite(data$firstrec),]$firstrec<-data[is.infinite(data$firstrec),]$lastObs
#replace real time with interval
plot.data$neg1 <- data$lastneg;
plot.data$negpos <- data$firstpos - data$lastneg;
plot.data$pos <-data$lastpos - data$firstpos;
plot.data$posneg2 <- data$firstrec - data$lastpos;
plot.data$neg2 <-  data$lastObs-data$firstrec;
#melt down
plot.data <- melt(plot.data,id = c("host_id","inoculationStatus","group","treatment"))
#create plots per treatment
plots <-NULL
for(i in unique(plot.data$treatment)){
plots<- ggplot(data = plot.data[plot.data$treatment == i,]%>%arrange(group)%>%arrange(host_id))+
geom_bar(aes(y = value, x = as.factor(host_id),
fill = factor(variable,levels = c("neg1","negpos","pos","posneg2","neg2")[c(5,4,3,2,1)])),stat= 'identity')+
coord_flip()+
scale_fill_manual('State',
values = color_scheme,
labels = period.labels[c(5,4,3,2,1)])+ylab("Days post challenge")+
xlab("host ID")+
ggtitle(i)+
scale_y_continuous(breaks = c(0:max(plot.data$value[!is.infinite(plot.data$value)])) )+
scale_x_discrete(limits = rev)+
if(length(unique(plot.data$group))>1){facet_grid(group ~ inoculationStatus , scales = "free_y")}
}
return(list(plots = plots, data = plot.data))
}
input.plot(transform.data.for.plot(localE$data))
#plot the input from a transmission experiment
#data require the following headings: group, animal_id, inoc,lastneg, firstpos, lastpos, firstrec, lastObs
input.plot <- function(data, color_scheme = c("#999999","#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"), period.labels = c("Negative", 'Neg->Pos', 'Positive', 'Pos-> Neg',"Negative again")){
plot.data <- data[,c(1:4)];#only select indicators
#replace all negative numbers for lastObs
data$lastneg[data$lastneg<0 ]<- data$lastObs[data$lastneg<0 ]
data$firstpos[data$firstpos<0 ]<- data$lastObs[data$firstpos<0 ]
data$lastpos[data$lastpos<0 ]<- data$lastObs[data$lastpos<0 ]
data$firstrec[data$firstrec<0 ]<- data$lastObs[data$firstrec<0 ]
#replace infinity for appropriate values
data[is.infinite(data$lastneg),]$lastneg<-data[is.infinite(data$lastneg),]$firstpos
data[is.infinite(data$firstpos),]$firstpos<-data[is.infinite(data$firstpos),]$lastpos
data[is.infinite(data$lastpos),]$lastpos<-data[is.infinite(data$lastpos),]$lastObs
data[is.infinite(data$firstrec),]$firstrec<-data[is.infinite(data$firstrec),]$lastObs
#replace real time with interval
plot.data$neg1 <- data$lastneg;
plot.data$negpos <- data$firstpos - data$lastneg;
plot.data$pos <-data$lastpos - data$firstpos;
plot.data$posneg2 <- data$firstrec - data$lastpos;
plot.data$neg2 <-  data$lastObs-data$firstrec;
#melt down
plot.data <- melt(plot.data,id = c("host_id","inoculationStatus","group","treatment"))
#create plots per treatment
plots <-NULL
for(i in unique(plot.data$treatment)){
plots<- ggplot(data = plot.data[plot.data$treatment == i,]%>%arrange(group)%>%arrange(host_id))+
geom_bar(aes(y = value, x = as.factor(host_id),
fill = factor(variable,levels = c("neg1","negpos","pos","posneg2","neg2")[c(5,4,3,2,1)])),stat= 'identity')+
coord_flip()+
scale_fill_manual('State',
values = color_scheme,
labels = period.labels[c(5,4,3,2,1)])+ylab("Days post challenge")+
xlab("host ID")+
ggtitle(i)+
scale_y_continuous(breaks = c(0:max(plot.data$value[!is.infinite(plot.data$value)])) )+
scale_x_discrete(limits = rev)+
if(length(unique(plot.data$group))>1){facet_grid(group ~ inoculationStatus ~. , scales = "free_y")}
}
return(list(plots = plots, data = plot.data))
}
input.plot(transform.data.for.plot(localE$data))
#plot the input from a transmission experiment
#data require the following headings: group, animal_id, inoc,lastneg, firstpos, lastpos, firstrec, lastObs
input.plot <- function(data, color_scheme = c("#999999","#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"), period.labels = c("Negative", 'Neg->Pos', 'Positive', 'Pos-> Neg',"Negative again")){
plot.data <- data[,c(1:4)];#only select indicators
#replace all negative numbers for lastObs
data$lastneg[data$lastneg<0 ]<- data$lastObs[data$lastneg<0 ]
data$firstpos[data$firstpos<0 ]<- data$lastObs[data$firstpos<0 ]
data$lastpos[data$lastpos<0 ]<- data$lastObs[data$lastpos<0 ]
data$firstrec[data$firstrec<0 ]<- data$lastObs[data$firstrec<0 ]
#replace infinity for appropriate values
data[is.infinite(data$lastneg),]$lastneg<-data[is.infinite(data$lastneg),]$firstpos
data[is.infinite(data$firstpos),]$firstpos<-data[is.infinite(data$firstpos),]$lastpos
data[is.infinite(data$lastpos),]$lastpos<-data[is.infinite(data$lastpos),]$lastObs
data[is.infinite(data$firstrec),]$firstrec<-data[is.infinite(data$firstrec),]$lastObs
#replace real time with interval
plot.data$neg1 <- data$lastneg;
plot.data$negpos <- data$firstpos - data$lastneg;
plot.data$pos <-data$lastpos - data$firstpos;
plot.data$posneg2 <- data$firstrec - data$lastpos;
plot.data$neg2 <-  data$lastObs-data$firstrec;
#melt down
plot.data <- melt(plot.data,id = c("host_id","inoculationStatus","group","treatment"))
#create plots per treatment
plots <-NULL
for(i in unique(plot.data$treatment)){
plots<- ggplot(data = plot.data[plot.data$treatment == i,]%>%
#arrange(group)%>%
arrange(host_id))+
geom_bar(aes(y = value, x = as.factor(host_id),
fill = factor(variable,levels = c("neg1","negpos","pos","posneg2","neg2")[c(5,4,3,2,1)])),stat= 'identity')+
coord_flip()+
scale_fill_manual('State',
values = color_scheme,
labels = period.labels[c(5,4,3,2,1)])+ylab("Days post challenge")+
xlab("host ID")+
ggtitle(i)+
scale_y_continuous(breaks = c(0:max(plot.data$value[!is.infinite(plot.data$value)])) )+
scale_x_discrete(limits = rev)+
if(length(unique(plot.data$group))>1){facet_grid(group ~ inoculationStatus ~. , scales = "free_y")}
}
return(list(plots = plots, data = plot.data))
}
input.plot(transform.data.for.plot(localE$data))
#plot the input from a transmission experiment
#data require the following headings: group, animal_id, inoc,lastneg, firstpos, lastpos, firstrec, lastObs
input.plot <- function(data, color_scheme = c("#999999","#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"), period.labels = c("Negative", 'Neg->Pos', 'Positive', 'Pos-> Neg',"Negative again")){
plot.data <- data[,c(1:4)];#only select indicators
#replace all negative numbers for lastObs
data$lastneg[data$lastneg<0 ]<- data$lastObs[data$lastneg<0 ]
data$firstpos[data$firstpos<0 ]<- data$lastObs[data$firstpos<0 ]
data$lastpos[data$lastpos<0 ]<- data$lastObs[data$lastpos<0 ]
data$firstrec[data$firstrec<0 ]<- data$lastObs[data$firstrec<0 ]
#replace infinity for appropriate values
data[is.infinite(data$lastneg),]$lastneg<-data[is.infinite(data$lastneg),]$firstpos
data[is.infinite(data$firstpos),]$firstpos<-data[is.infinite(data$firstpos),]$lastpos
data[is.infinite(data$lastpos),]$lastpos<-data[is.infinite(data$lastpos),]$lastObs
data[is.infinite(data$firstrec),]$firstrec<-data[is.infinite(data$firstrec),]$lastObs
#replace real time with interval
plot.data$neg1 <- data$lastneg;
plot.data$negpos <- data$firstpos - data$lastneg;
plot.data$pos <-data$lastpos - data$firstpos;
plot.data$posneg2 <- data$firstrec - data$lastpos;
plot.data$neg2 <-  data$lastObs-data$firstrec;
#melt down
plot.data <- melt(plot.data,id = c("host_id","inoculationStatus","group","treatment"))
#create plots per treatment
plots <-NULL
for(i in unique(plot.data$treatment)){
plots<- ggplot(data = plot.data[plot.data$treatment == i,]%>%
#arrange(group)%>%
arrange(desc(host_id)))+
geom_bar(aes(y = value, x = as.factor(host_id),
fill = factor(variable,levels = c("neg1","negpos","pos","posneg2","neg2")[c(5,4,3,2,1)])),stat= 'identity')+
coord_flip()+
scale_fill_manual('State',
values = color_scheme,
labels = period.labels[c(5,4,3,2,1)])+ylab("Days post challenge")+
xlab("host ID")+
ggtitle(i)+
scale_y_continuous(breaks = c(0:max(plot.data$value[!is.infinite(plot.data$value)])) )+
scale_x_discrete(limits = rev)+
if(length(unique(plot.data$group))>1){facet_grid(group ~ inoculationStatus ~. , scales = "free_y")}
}
return(list(plots = plots, data = plot.data))
}
input.plot(transform.data.for.plot(localE$data))
input.plot(transform.data.for.plot(localE$data[localE$data$inoculationStatus == "S", ]))
input.plot(transform.data.for.plot(localE$data[localE$data$inoculationStatus == "Inoculated", ]))
input.plot(transform.data.for.plot(localE$data[localE$data$inoculationStatus == "S", ]))
#plot the input from a transmission experiment
#data require the following headings: group, animal_id, inoc,lastneg, firstpos, lastpos, firstrec, lastObs
input.plot <- function(data, color_scheme = c("#999999","#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"), period.labels = c("Negative", 'Neg->Pos', 'Positive', 'Pos-> Neg',"Negative again")){
plot.data <- data[,c(1:4)];#only select indicators
#replace all negative numbers for lastObs
data$lastneg[data$lastneg<0 ]<- data$lastObs[data$lastneg<0 ]
data$firstpos[data$firstpos<0 ]<- data$lastObs[data$firstpos<0 ]
data$lastpos[data$lastpos<0 ]<- data$lastObs[data$lastpos<0 ]
data$firstrec[data$firstrec<0 ]<- data$lastObs[data$firstrec<0 ]
#replace infinity for appropriate values
data[is.infinite(data$lastneg),]$lastneg<-data[is.infinite(data$lastneg),]$firstpos
data[is.infinite(data$firstpos),]$firstpos<-data[is.infinite(data$firstpos),]$lastpos
data[is.infinite(data$lastpos),]$lastpos<-data[is.infinite(data$lastpos),]$lastObs
data[is.infinite(data$firstrec),]$firstrec<-data[is.infinite(data$firstrec),]$lastObs
#replace real time with interval
plot.data$neg1 <- data$lastneg;
plot.data$negpos <- data$firstpos - data$lastneg;
plot.data$pos <-data$lastpos - data$firstpos;
plot.data$posneg2 <- data$firstrec - data$lastpos;
plot.data$neg2 <-  data$lastObs-data$firstrec;
#melt down
plot.data <- melt(plot.data,id = c("host_id","inoculationStatus","group","treatment"))
#create plots per treatment
plots <-NULL
for(i in unique(plot.data$treatment)){
plots<- ggplot(data = plot.data[plot.data$treatment == i,]%>%
#arrange(group)%>%
arrange(desc(host_id)))+
geom_bar(aes(y = value, x = as.factor(host_id),
fill = factor(variable,levels = c("neg1","negpos","pos","posneg2","neg2")[c(5,4,3,2,1)])),stat= 'identity')+
coord_flip()+
scale_fill_manual('State',
values = color_scheme,
labels = period.labels[c(5,4,3,2,1)])+ylab("Days post challenge")+
xlab("host ID")+
ggtitle(i)+
scale_y_continuous(breaks = c(0:max(plot.data$value[!is.infinite(plot.data$value)])) )+
scale_x_discrete(limits = rev)+
if(length(unique(plot.data$group))>1){facet_grid(group + inoculationStatus ~. , scales = "free_y")}
}
return(list(plots = plots, data = plot.data))
}
input.plot(transform.data.for.plot(localE$data[localE$data$inoculationStatus == "S", ]))
debugSource("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
input.plot(transform.data.for.plot(localE$data[localE$data$inoculationStatus == "S", ]))
i
i
plot.data$treatment
unique(plot.data$treatment)
plot.data[is.na(plot.data$treatment),]
localE$data
localE$data$treatment
debugSource("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
debugSource("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
input.plot(transform.data.for.plot(localE$data[localE$data$inoculationStatus == "S", ]))
data
data[,c(1:4)]
data$lastneg
data$firstpos
data$firstpos
data$lastpos
data$firstrec
data$lastpos
data$firstrec
data$lastObs
plot.data
localE$data
localE$data$treatment
is.na(localE$data$treatment)
localE$data[is.na(localE$data$treatment),]
debugSource("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
input.plot(transform.data.for.plot(localE$data[localE$data$inoculationStatus == "S", ]))
debugSource("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
input.plot(transform.data.for.plot(localE$data[localE$data$inoculationStatus == "S", ]))
plot.data
sirdata
unique(sirdata$host_id)
sirdata%>%filter(host_id ==i)
out
sirdata[i,"inoculationStatus"]
sirdata[i,"treatment"]
max(0,min(host.data[host.data$sir == 0,]$times))
host.data
host.data[host.data$sir == 2,]
max(0,min(host.data[host.data$sir == 2,]$times))
out
i = "164"
host.data <- sirdata%>%filter(host_id ==i);
host.data
data.frame(host_id = i,
inoculationStatus = sirdata[i,"inoculationStatus"],
group = paste0(sirdata[i,"level1"],"_",sirdata[i,"level2"]),
treatment = sirdata[i,"treatment"],
lastneg = max(0,min(host.data[host.data$sir == 0,]$times)),#select last negative time
firstpos = max(0,min(host.data[host.data$sir == 2,]$times)),#select first positive time
lastpos = max(0,max(host.data[host.data$sir == 2,]$times)),#select last positive time
firstrec = max(0,min(host.data[host.data$sir == 3,]$times)),#select first recovered time
lastObs = max(host.data$times)
)
sirdata[i,"inoculationStatus"]
sirdata[i,]
i
sirdata$host_id
sirdata$host_id==i
sirdata$host_id
sirdata[sirdata$host_id==i,]
data.frame(host_id = i,
inoculationStatus = sirdata[i,"inoculationStatus"],
group = paste0(sirdata[i,"level1"],"_",sirdata[i,"level2"]),
treatment = sirdata[i,"treatment"],
lastneg = max(0,min(host.data[host.data$sir == 0,]$times)),#select last negative time
firstpos = max(0,min(host.data[host.data$sir == 2,]$times)),#select first positive time
lastpos = max(0,max(host.data[host.data$sir == 2,]$times)),#select last positive time
firstrec = max(0,min(host.data[host.data$sir == 3,]$times)),#select first recovered time
lastObs = max(host.data$times))
sirdata%>%filter(host_id ==i)
host.data <- sirdata%>%filter(host_id ==i);
out <- rbind(out,
data.frame(host_id = i,
inoculationStatus = sirdata[i,"inoculationStatus"],
group = paste0(sirdata[i,"level1"],"_",sirdata[i,"level2"]),
treatment = sirdata[i,"treatment"],
lastneg = max(0,min(host.data[host.data$sir == 0,]$times)),#select last negative time
firstpos = max(0,min(host.data[host.data$sir == 2,]$times)),#select first positive time
lastpos = max(0,max(host.data[host.data$sir == 2,]$times)),#select last positive time
firstrec = max(0,min(host.data[host.data$sir == 3,]$times)),#select first recovered time
lastObs = max(host.data$times)) #last observation
)
data.frame(host_id = i,
inoculationStatus = sirdata[i,"inoculationStatus"],
group = paste0(sirdata[i,"level1"],"_",sirdata[i,"level2"]),
treatment = sirdata[i,"treatment"],
lastneg = max(0,min(host.data[host.data$sir == 0,]$times)),#select last negative time
firstpos = max(0,min(host.data[host.data$sir == 2,]$times)),#select first positive time
lastpos = max(0,max(host.data[host.data$sir == 2,]$times)),#select last positive time
firstrec = max(0,min(host.data[host.data$sir == 3,]$times)),#select first recovered time
lastObs = max(host.data$times))
sirdata[i,"inoculationStatus"]
sirdata[i,]
i
sirdata[host_id ==i,"inoculationStatus"]
debugSource("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
input.plot(transform.data.for.plot(localE$data[localE$data$inoculationStatus == "S", ]))
transform.data.for.plot <- function(sirdata){
out <-data.frame(host_id =c(),
inoculationStatus=c(),
group =c(),
treatment=c(),
lastneg = c(),
firstpos=c(),
lastpos=c(),
firstrec=c(),
lastObs=c())
#iterate data
for(i in unique(sirdata$host_id))
{
host.data <- sirdata%>%filter(host_id ==i);
out <- rbind(out,
data.frame(host_id = i,
inoculationStatus = host.data["inoculationStatus"],
group = paste0(host.data["level1",1],"_",host.data["level2",1]),
treatment = host.data["treatment"],
lastneg = max(0,min(host.data[host.data$sir == 0,]$times)),#select last negative time
firstpos = max(0,min(host.data[host.data$sir == 2,]$times)),#select first positive time
lastpos = max(0,max(host.data[host.data$sir == 2,]$times)),#select last positive time
firstrec = max(0,min(host.data[host.data$sir == 3,]$times)),#select first recovered time
lastObs = max(host.data$times)) #last observation
)
}
return(out)
}
input.plot(transform.data.for.plot(localE$data[localE$data$inoculationStatus == "S", ]))
debugSource("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
length(list())
length(list(a = a))
length(list(a = 1))
length(list(a = 1, b = 2))
debugSource("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
test <- input.plot(transform.data.for.plot(localE$data))
debugSource("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
test <- input.plot(transform.data.for.plot(localE$data))
data[,c(1:4)]
q
source("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
test <- input.plot(transform.data.for.plot(localE$data))
test
debugSource("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
test
debugSource("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
test <- input.plot(transform.data.for.plot(localE$data))
plot.data
data$lastneg
debugSource("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
test <- input.plot(transform.data.for.plot(localE$data))
plot.data
plot.data$negpos
plot.data$variable
test$plots
test <- input.plot(transform.data.for.plot(localE$data))
plots[[1]]
i
i = "control"
plot.data[plot.data$treatment == i,]
plot.data[plot.data$treatment == i & host_id == "10",]
plot.data[plot.data$treatment == i & plot.data$host_id == "10",]
plot.data[plot.data$treatment == i & plot.data$host_id == "10",]
data
data[data$host_id==1,]
data[data$host_id==10,]
dataE
dataE$ex_day
unique(dataE$ex_day)
order(unique(dataE$ex_day))
order(as.numeric(unique(dataE$ex_day)))
order(unique(as.numeric(dataE$ex_day)))
order(unique(as.numeric(dataE$ex_day)),dataE$ex_day)
dataE$ex_day[order(unique(as.numeric(dataE$ex_day))),]
dataE$ex_day[order(unique(as.numeric(dataE$ex_day)))]
dataE$ex_day[order(unique(dataE$ex_day))]
unique(dataE$ex_day)[order(unique(dataE$ex_day))]
unique(dataE$ex_day)[order(unique(as.numeric(dataE$ex_day)))]
debugSource("C:/Users/fisch106/surfdrive - Fischer, E.A.J. (Egil)@surfdrive.surf.nl/Projecten/SUMMERFAIR/ProjectShareSUMMERFAIR/Syntax/autumn-fair/src/WorkingExample/ExperimentalPlots.R", echo=TRUE)
test <- input.plot(transform.data.for.plot(localE$data))
plot.data
out
host.data
